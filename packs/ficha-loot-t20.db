{"name":"Converter para Looteavel","permission":{"default":0,"KEgmi1MbPScXAcVh":3},"type":"script","flags":{"core":{"sourceId":"Macro.yyAb340fKlZQ9MBh"}},"scope":"global","command":"// Converte fichas de NPCs em fichas de Loot (usando o módulo Ficha Loot T20)/\n// For all currently selected tokens, changes their actor sheet to LootSheetNPC,\n// deletes all non-lootable items, sets token Observer privs for players, and adds a treasure\n// overlay icon to the body. Asks for confirmation because of the deletions.\n//\n// Built with help from a ton of people, notably: @Akaito, @honeybadger, @kekilla, and @cole\n\nlet d = new Dialog({\n  title: 'Converter para corpo pilhável?',\n  content: `Tem certeza?`,\n  buttons: {\n    no: {\n      icon: '<i class=\"fas fa-ban\"></i>',\n      label: 'Cancelar'\n    },\n    yes: {\n      icon: '<i class=\"fas fa-thumbs-up\"></i>',\n      label: 'Converter',\n      callback: (html) => {\n        ConvertToLootable();\n      }\n    },\n  },\n  default: 'no',\n}).render(true);\n\nasync function ConvertToLootable(){\n  for (let token of canvas.tokens.controlled) {\n  \n    // Não executar em PJs por engano\n    if (token.actor.data.type === 'character')\n      continue;\n    \n    // Remover itens que não deveriam ser pilháveis\n    let newItems = token.actor.data.items\n      .filter(item => {\n        // Armas, exceto naturais\n        if (item.type == 'arma') {\n          return item.data.tipoUso != 'natural';\n        }\n        // Equipmentos, exceto naturais ou bônus mágicos\n        if (item.type == 'equip') {\n          return item.data.tipo != 'natural' && item.data.tipo != 'bonus';\n        }\n\t\t\t\t// Tudo, exceto classe, magia ou poder\n        return !(['classe', 'magia', 'poder'].includes(item.type));\n      });\n    await token.actor.update({\n      \"items\": newItems\n    });\n\n    // Mudar a ficha e dar permissões para os jogadores.\n    let newActorData = {\n      'flags': {\n          'core': {\n            'sheetClass': 'tormenta20.LootSheet5eNPC'\n          },\n        'fichaloott20': {\n          'lootsheettype': 'Loot'\n        }\n      }\n    };\n    \n    let lootingUsers= game.users.entries\n    // Limit selection to Players and Trusted Players\n      .filter(user => {return user.role >= 1 && user.role <= 2});\n\n    // This section is a workaround for the fact that the LootSheetNPC module\n    // currently uses an older currency schema, compared to current 5e expectations.\n    // Need to convert the actor's currency data to the LS schema here to avoid\n    // breakage. If there is already currency on the actor, it is retained.\n\n    if (typeof(token.actor.data.data.detalhes.dinheiro.tc) === \"number\") {\n      let oldCurrencyData = token.actor.data.data.detalhes.dinheiro;\n      newActorData['data.currency'] = {\n        'tl': {'value': oldCurrencyData.tl},\n        'to': {'value': oldCurrencyData.to},\n        'tp': {'value': oldCurrencyData.tp},\n        'tc': {'value': oldCurrencyData.tc}\n      };\n    }\n\n    /* Uncomment this section if you want a set amount of gold automatically added\n    \n    // See if the token already has any gold\n    let currencyArray = [];\n    for (const currency in newActorData){\n      currencyArray.push(newActorData[currency].value);\n    }\n    const hasGold = Math.max(...currencyArray) > 0;\n\n    // If the actor has no gold, assign gold by CR: gold = 0.6e(0.15*CR)\n    if (!hasGold){\n      const exponent = 0.15 * (getProperty(token.actor, \"data.data.details.cr\") ?? 0);\n      let gold = Math.round(0.6 * 10 * (10 ** exponent));\n\n      // Ensure it can divide evenly across all looting players\n      gold = gold + (gold % Math.max(lootingUsers.length, 1)) ?? 0;\n\n      newActorData['data.currency'].gp.value = gold;\n    }\n    \n    */\n\n    await token.actor.update(newActorData);\n\n    // Update permissions to level 2, so players can loot\n    let permissions = {};\n    Object.assign(permissions, token.actor.data.permission);\n    lootingUsers.forEach(user => {\n      permissions[user.data._id] = 2;\n    });\n    \n    // If using Combat Utility Belt, need to remove any of its condition overlays\n    // before we can add the chest icon overlay.\n    if (game.modules.get(\"combat-utility-belt\")?.active) {\n      await game.cub.removeAllConditions(token);\n    }\n        \n    await token.update({\n      \"overlayEffect\" : 'icons/svg/chest.svg',\n      \"actorData\": {\n        \"actor\": {\n          \"flags\": {\n            \"loot\": {\n              \"playersPermission\": 2\n            }\n          }\n        },\n        \"permission\": permissions\n      }\n    });\n  }\n}","author":"KEgmi1MbPScXAcVh","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"d8ao64YmSWW16WMU"}
